{"meta":{"title":"Zephaniah's Blog","subtitle":"","description":"","author":"Zephaniah","url":"http://yoursite.com","root":"/"},"pages":[{"title":"所有分类","date":"2020-07-16T12:19:58.840Z","updated":"2020-07-16T12:19:58.840Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"关于","date":"2020-07-16T12:07:44.555Z","updated":"2020-07-16T12:07:44.555Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"下面写关于自己的内容"},{"title":"所有标签","date":"2020-07-16T12:19:53.544Z","updated":"2020-07-16T12:19:53.544Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"如何免费科学上网","slug":"如何免费科学上网","date":"2020-07-21T08:53:21.000Z","updated":"2020-07-21T09:27:54.944Z","comments":true,"path":"2020/07/21/如何免费科学上网/","link":"","permalink":"http://yoursite.com/2020/07/21/%E5%A6%82%E4%BD%95%E5%85%8D%E8%B4%B9%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/","excerpt":"","text":"写在前面：本文介绍的如何免费科学上网是通过一个网站xcat.us来实现的，这个网站注册之后有免费三天vip可以用，之后过期了就要充值，最低是￥6元一个月，详情自己进去看。那么问题来了，如何长期免费用呢，聪明的小伙伴就发现了，可以通过不断注册新的帐号来使用，但是这个注册帐号是用邮箱接受验证码来注册的，如果你邮箱够多，那也能用一段时间了，但是现在很多邮箱都要用手机号码来注册，所以也实现不了长期使用啊，不可能每次用完了都去买个手机号，那还不如直接买6块一个月（个人感觉还是挺实惠的），所以我们就要用到不用手机号注册的邮箱了，这里我只找到了一种：yandex，其他一些临时邮箱这个网站能检测出来所以用不了。下面我们就来说说怎么注册这个yandex邮箱。 【1】进入yandex点击Create an account 【2】填信息然后自己填信息，然后点击我没有手机号码 然后会出现要你填验证码，而这个验证码非常反人类，我当初填了几十次都注册失败，明明填的跟他图片一模一样都是失败，后来才发现如果你fq了的话就非常容易成功了，这里说一下手机上有很多fq的app随便下一个能用的，大多数都有免费几天用，然后就注册成功了。如果不能fq的小伙伴就多试几次吧直到出现一个不分开两张图的可能就能成功了。 【3】注册成功注册成功之后不要急着去xcat注册，最好先用你自己常用的邮箱发一份邮件试试能不能用，我第一次注册的时候就用不了，后面自己去发邮件到这个yandex邮箱的时候会被退信，然后重新注册一个yandex，先用自己邮箱测试能收件成功再去xcat注册，基本上都能收到验证码 【4】使用xcatxcat的注册很简单，输入邮箱输入验证码就还有其他一些个人信息基本就行了，之后如何使用xcat在那个网站上都写得很清楚，这里我简单说一下。 登录成功之后直接点击查看最新教程 有电脑版的和手机版的（ios要先充值￥12元获得美区账号才能下载app，或者有账号的下载app要1.99刀，所以不推荐ios用户使用，毕竟不能白嫖）。 电脑版：下载Clash下载下来是一个压缩文件直接解压，得到一个安装包直接右键管理员运行，然后安装 -&gt; 运行 最后点击Download就可以了，接着按下图操作 然后到这里基本可以科学上网了，想要用安卓版的自己去看我没有安卓机所以没弄，然后其他有不懂的下方评论我看到会回复或者找那个网站的客服，有兴趣的小伙伴可以研究一下别的，本次介绍到此结束。","categories":[{"name":"personal blog","slug":"personal-blog","permalink":"http://yoursite.com/categories/personal-blog/"}],"tags":[{"name":"科学上网","slug":"科学上网","permalink":"http://yoursite.com/tags/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"}]},{"title":"修改Hexo博客主题","slug":"修改Hexo博客主题","date":"2020-07-18T11:52:15.000Z","updated":"2020-07-18T12:52:30.093Z","comments":true,"path":"2020/07/18/修改Hexo博客主题/","link":"","permalink":"http://yoursite.com/2020/07/18/%E4%BF%AE%E6%94%B9Hexo%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98/","excerpt":"","text":"我的博客选择的主题是Volantis，主要是把背景改成了代码雨，添加了打字特效，把评论系统从原来的valine改成了livere。第一次搭建博客主要参考了itrhx.com这位在官网看到的大佬博主。 代码雨背景在博客上面添加代码雨背景只需要把原来的背景删掉，然后在themes\\volantis\\layout.ejs这个文件里面的body前面添加以下代码： 12&lt;canvas id=\"canvas\" width=\"1920\" height=\"1080\"&gt;&lt;/canvas&gt;&lt;script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/gh/Zephaniah-H/hexo-blog@1.1/js/coderain.js\"&gt;&lt;/script&gt; src里面的地址是代码雨的实现代码，我把它放在github上面用cdn加速访问了。 然后还要在themes\\volantis\\source\\css\\_layout\\main.styl的末尾添加： 12345678910canvas &#123; position: fixed; right: 0px; bottom: 0px; min-width: 100%; min-height: 100%; height: auto; width: auto; z-index: -1;&#125; 打字特效直接在需要的地方添加代码，我把它放在了themes\\volantis\\layout\\_cover\\index.ejs里： 12345678&lt;script src=\"https://cdn.jsdelivr.net/gh/Zephaniah-H/hexo-blog@1.0/js/typed.js\"&gt;&lt;/script&gt;&lt;div style=\"text-align: center;font-weight: bold;color: #1c92c4;\"&gt; &lt;span id=\"subtitle\"&gt;&lt;/span&gt; &lt;span id=\"typed-cursor\"&gt;&lt;/span&gt;&lt;/div&gt;&lt;script&gt; var typed = new Typed(\"#subtitle\", &#123; strings: [\"需要打出来的字\"], startDelay: 1000, typeSpeed: 100, loop: !0, backSpeed: 60, backDelay: 2000, showCursor: !0 &#125;)&lt;/script&gt; 把评论系统修改为livere先去livere官网注册一个帐号，应该要用外网才能注册，直接去注册有可能成功，我点了好久糊里糊涂就成功了。注册成功之后点击安装，安装免费版的city就够用了。 然后在themes\\volantis\\layout\\_partial下面新建一个livere.ejs文件，文件的内容就是上面获取的代码。 然后把里面的评论部分代码修改成如下： 123456&lt;% &#125; else if (widget_id == 'comments') &#123; %&gt; &lt;% if (post.comments)&#123; %&gt; &lt;%- partial('/livere') %&gt; &lt;% &#125; else &#123; %&gt; &lt;div class=\"lv-container\"&gt;&lt;/div&gt; &lt;% &#125; %&gt; 此时livere已经添加OK了，重新部署博客然后刷新页面就可以看到博客中添加好了livere评论系统。 遇到的问题： 主题本身配置了很多种评论系统，包括现在这个livere，然后只需要配置一些参数，这里的livere只需要配置uid，然后把配置文件里面comments下的service改成livere就可以用这个评论系统了，但是有一个问题就是每次第一次进去评论框都会加载不出来，然后刷新一次才能加载出来，这实在是太让人抓狂(┬＿┬)，然后又去弄了一下gitalk，发现还是会有这个问题，无奈之下只能舍弃掉主题本身配置好的，然后自己重新配置加入新的代码，然后就成功了，不过到现在我也不知道是什么原因，毕竟我只是个小白，查到的代码看到哪里顺眼就放哪里，行就行了，不行再换个地方。 用不蒜子添加网站运行时间、文章阅读数主题本身已经配置好了不蒜子，只要在需要的地方加上代码就行了 12&lt;span id=\"busuanzi_container_site_pv\"&gt;本站总访问量&lt;span id=\"busuanzi_value_site_pv\"&gt;&lt;/span&gt;次&lt;/span&gt;&lt;span id=\"busuanzi_container_site_uv\"&gt;本站访客数&lt;span id=\"busuanzi_value_site_uv\"&gt;&lt;/span&gt;人&lt;/span&gt; 注意：上面两行代码有所不同，pv是计算点击网站文章次数，uv只在进入网站的时候计算一次。添加完了之后要 hexo d -g 才会看到正确的数字，如果只是 hexo s 会看到一个很大的数字。","categories":[{"name":"personal blog","slug":"personal-blog","permalink":"http://yoursite.com/categories/personal-blog/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"},{"name":"博客主题","slug":"博客主题","permalink":"http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98/"}]},{"title":"学习git的使用","slug":"学习git的使用","date":"2020-07-15T19:16:08.000Z","updated":"2020-07-20T19:07:21.102Z","comments":true,"path":"2020/07/16/学习git的使用/","link":"","permalink":"http://yoursite.com/2020/07/16/%E5%AD%A6%E4%B9%A0git%E7%9A%84%E4%BD%BF%E7%94%A8/","excerpt":"","text":"最近在B站上面学习了git的使用，现在把记录下来，视频链接：https://www.bilibili.com/video/BV1sJ411D7xN?p=1 git的本地工作流程在本地的时候文件会经历以下三个地方，经过一系列的指令之后最终保存在本地仓库中。 )git init 初始化仓库，让git知道它要管理这个仓库，生成隐藏文件.gitgit status 查看当前状态（工作区、缓存区、Git Repository本地仓库）git add 添加到缓存区git commit -m &quot;提交说明/描述&quot; 提交到本地仓库 git的版本回退操作（时光穿梭机）git log 查看操作日志（显示作者、编号、当前版本、提交日期、提交注释）git log --pretty=oneline 查看操作日志（只显示编号、当前版本、提交注释）git reset --hard 提交编号 回溯到该编号的版本git reflog 由于git log只能看到当前以及之前的编号，所以要用到这个才能看到当前之后的编号，便于回溯到了之前又想回溯到之后的版本mkdir 文件夹名 创建文件夹cd 文件地址 进入文件夹注意：编号可以不写全，但最好要写4位以上，避免以后编号多了会重复。 基于https协议的github远程仓库的使用在github创建了一个新的仓库之后可以看到地址（默认是https协议）：git clone 线上仓库地址 克隆线上仓库到本地 git push 修改完代码之后提交到本地仓库之后就使用该指令提交到线上仓库，但是要先在.git/config文件的url的//后面加上github的用户名:密码@，不然会提示权限不足（每天下班的最后一件事要git push）git pull 拉取线上仓库最新版本（每天上班的时候第一件事要git pull） git remote add origin 线上仓库地址 连接本地仓库和线上仓库 git push -u origin 第一次连接仓库之后的push要这样写 由于每次使用git提交线上仓库的时候都要输入一次github的账号密码，这样很麻烦且不安全，所以就有了下面的ssh方式，只需要配置一次。 基于ssh协议（推荐用这个）基于ssh协议与https相比，只是影响github对于用户的身份鉴权方式，其他操作一模一样点击Use SSH可以切换到ssh协议：生成公私钥对指令（需先自行安装OpenSSH）：ssh-keygen -t rsa -C &quot;注册邮箱&quot;（输入完这行代码之后一直回车就行了，然后他会显示公钥和私钥在哪个文件，自己去找到填在github上就行了）步骤:1.生成客户端公私钥文件2.将公钥上传到Github完了之后就可以克隆到本地啊，添加缓存区啊，提交本地仓库啊等等操作 分支管理)分支相关指令：查看分支：git branch创建分支：git branch 分支名切换分支：git checkout 分支名删除分支：git branch -d 分支名注意：在删除分支的时候，一定要先退出要删除的分支，不然是删除不掉的。合并分支：git merge 被合并的分支名 冲突的产生与解决产生：在下班我git push之后，有同事修改了代码，然后我第二天上班没有git pull，而是直接修改代码，然后下班的时候git push就会产生冲突。解决：先git pull，然后系统会自动把线上仓库和本地仓库的冲突合并，然后我们需要和之前修改代码的同事商量该如何删除或保留这个合并之后的代码。最后商量好了就可以git add 、git commit -m 、git push了 Git实用技能1、图形管理工具①Github for Desktop②source tree)③TortoiseGit④装好git自带的，在非仓库的地方右键Git GUI Here 忽略文件创建.gitignore文件：写在.gitignore文件里：1./mtk/ 过滤整个mtk文件夹2.*.zip 过滤所有.zip文件3./mtk/do.c 过滤mtk文件夹下do.c文件4.!index.php 不过滤index.php文件在文件中以#开头的都是注释 标签的使用git tag 标签名（如v1.0）创建一个标签 git push --tags 提交的时候把标签也提交了 git checkout 标签名 切换到该标签下的文件","categories":[{"name":"git","slug":"git","permalink":"http://yoursite.com/categories/git/"},{"name":"github","slug":"github","permalink":"http://yoursite.com/categories/github/"}],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2020-07-15T17:51:43.529Z","updated":"2020-07-16T10:22:46.182Z","comments":true,"path":"2020/07/16/hello-world/","link":"","permalink":"http://yoursite.com/2020/07/16/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[{"name":"personal blog","slug":"personal-blog","permalink":"http://yoursite.com/categories/personal-blog/"},{"name":"git","slug":"git","permalink":"http://yoursite.com/categories/git/"},{"name":"github","slug":"github","permalink":"http://yoursite.com/categories/github/"}],"tags":[{"name":"科学上网","slug":"科学上网","permalink":"http://yoursite.com/tags/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"},{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"},{"name":"博客主题","slug":"博客主题","permalink":"http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98/"}]}